const { ethers, network } = require("hardhat");
const { moveBlocks } = require("../utils/move-blocks");

const LEVEL = 1; // change this to reflect testing result data to metadata later
const PRICE = ethers.utils.parseEther("0.1"); // change this later

async function mintandList() {
    const talentsPool = await ethers.getContract("TalentsPool");
    const talentBadge = await ethers.getContract("TalentBadge");
    console.log("Minting a talent badge...");
    const mintTx = await talentBadge.mintBadge(LEVEL);
    const mintTxReceipt = await mintTx.wait(1);
    const badgeId = mintTxReceipt.events[1].args.badgeId; // event[0] is the tranfer event generated by _safeMint from event Transfer(address indexed from, address indexed to, uint256 indexed tokenId) in IERC721.sol
    // const badgeId = mintTxReceipt.events.find((event) => event.event === "BadgeMinted").args
    //     .badgeId;

    console.log("Approving the badge for the talents pool...");
    const approvalTx = await talentBadge.approve(talentsPool.address, badgeId);
    await approvalTx.wait(1);

    console.log("Listing the badge in the talents pool...");
    const listTx = await talentsPool.listBadge(talentBadge.address, badgeId, PRICE);
    await listTx.wait(1);
    console.log("Badge listed!");

    if (network.config.chainId == "31337") {
        console.log("Mining 1 block...");
        await moveBlocks(1, (sleepTimeInMs = 1000));
    }
}

mintandList()
    .then(() => process.exit(0))
    .catch((error) => {
        console.error(error);
        process.exit(1);
    });
