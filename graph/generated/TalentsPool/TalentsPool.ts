// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BadgeListed extends ethereum.Event {
  get params(): BadgeListed__Params {
    return new BadgeListed__Params(this);
  }
}

export class BadgeListed__Params {
  _event: BadgeListed;

  constructor(event: BadgeListed) {
    this._event = event;
  }

  get talentAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get badgeAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get badgeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class BadgePrepaid extends ethereum.Event {
  get params(): BadgePrepaid__Params {
    return new BadgePrepaid__Params(this);
  }
}

export class BadgePrepaid__Params {
  _event: BadgePrepaid;

  constructor(event: BadgePrepaid) {
    this._event = event;
  }

  get clientAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get badgeAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get badgeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get talentAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class BadgeUnlisted extends ethereum.Event {
  get params(): BadgeUnlisted__Params {
    return new BadgeUnlisted__Params(this);
  }
}

export class BadgeUnlisted__Params {
  _event: BadgeUnlisted;

  constructor(event: BadgeUnlisted) {
    this._event = event;
  }

  get talentAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get badgeAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get badgeId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TalentsPool__getBadgeListingResultValue0Struct extends ethereum.Tuple {
  get talentAddress(): Address {
    return this[0].toAddress();
  }

  get price(): BigInt {
    return this[1].toBigInt();
  }
}

export class TalentsPool extends ethereum.SmartContract {
  static bind(address: Address): TalentsPool {
    return new TalentsPool("TalentsPool", address);
  }

  getBadgeListing(
    badgeAddress: Address,
    badgeId: BigInt
  ): TalentsPool__getBadgeListingResultValue0Struct {
    let result = super.call(
      "getBadgeListing",
      "getBadgeListing(address,uint256):((address,uint256))",
      [
        ethereum.Value.fromAddress(badgeAddress),
        ethereum.Value.fromUnsignedBigInt(badgeId)
      ]
    );

    return changetype<TalentsPool__getBadgeListingResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getBadgeListing(
    badgeAddress: Address,
    badgeId: BigInt
  ): ethereum.CallResult<TalentsPool__getBadgeListingResultValue0Struct> {
    let result = super.tryCall(
      "getBadgeListing",
      "getBadgeListing(address,uint256):((address,uint256))",
      [
        ethereum.Value.fromAddress(badgeAddress),
        ethereum.Value.fromUnsignedBigInt(badgeId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TalentsPool__getBadgeListingResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getEarnings(talentAddress: Address): BigInt {
    let result = super.call("getEarnings", "getEarnings(address):(uint256)", [
      ethereum.Value.fromAddress(talentAddress)
    ]);

    return result[0].toBigInt();
  }

  try_getEarnings(talentAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEarnings",
      "getEarnings(address):(uint256)",
      [ethereum.Value.fromAddress(talentAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ListBadgeCall extends ethereum.Call {
  get inputs(): ListBadgeCall__Inputs {
    return new ListBadgeCall__Inputs(this);
  }

  get outputs(): ListBadgeCall__Outputs {
    return new ListBadgeCall__Outputs(this);
  }
}

export class ListBadgeCall__Inputs {
  _call: ListBadgeCall;

  constructor(call: ListBadgeCall) {
    this._call = call;
  }

  get badgeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get badgeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ListBadgeCall__Outputs {
  _call: ListBadgeCall;

  constructor(call: ListBadgeCall) {
    this._call = call;
  }
}

export class PrepayBadgeCall extends ethereum.Call {
  get inputs(): PrepayBadgeCall__Inputs {
    return new PrepayBadgeCall__Inputs(this);
  }

  get outputs(): PrepayBadgeCall__Outputs {
    return new PrepayBadgeCall__Outputs(this);
  }
}

export class PrepayBadgeCall__Inputs {
  _call: PrepayBadgeCall;

  constructor(call: PrepayBadgeCall) {
    this._call = call;
  }

  get badgeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get badgeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class PrepayBadgeCall__Outputs {
  _call: PrepayBadgeCall;

  constructor(call: PrepayBadgeCall) {
    this._call = call;
  }
}

export class UnlistBadgeCall extends ethereum.Call {
  get inputs(): UnlistBadgeCall__Inputs {
    return new UnlistBadgeCall__Inputs(this);
  }

  get outputs(): UnlistBadgeCall__Outputs {
    return new UnlistBadgeCall__Outputs(this);
  }
}

export class UnlistBadgeCall__Inputs {
  _call: UnlistBadgeCall;

  constructor(call: UnlistBadgeCall) {
    this._call = call;
  }

  get badgeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get badgeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnlistBadgeCall__Outputs {
  _call: UnlistBadgeCall;

  constructor(call: UnlistBadgeCall) {
    this._call = call;
  }
}

export class UpdatePriceCall extends ethereum.Call {
  get inputs(): UpdatePriceCall__Inputs {
    return new UpdatePriceCall__Inputs(this);
  }

  get outputs(): UpdatePriceCall__Outputs {
    return new UpdatePriceCall__Outputs(this);
  }
}

export class UpdatePriceCall__Inputs {
  _call: UpdatePriceCall;

  constructor(call: UpdatePriceCall) {
    this._call = call;
  }

  get badgeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get badgeId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdatePriceCall__Outputs {
  _call: UpdatePriceCall;

  constructor(call: UpdatePriceCall) {
    this._call = call;
  }
}

export class WithdrawEarningsCall extends ethereum.Call {
  get inputs(): WithdrawEarningsCall__Inputs {
    return new WithdrawEarningsCall__Inputs(this);
  }

  get outputs(): WithdrawEarningsCall__Outputs {
    return new WithdrawEarningsCall__Outputs(this);
  }
}

export class WithdrawEarningsCall__Inputs {
  _call: WithdrawEarningsCall;

  constructor(call: WithdrawEarningsCall) {
    this._call = call;
  }
}

export class WithdrawEarningsCall__Outputs {
  _call: WithdrawEarningsCall;

  constructor(call: WithdrawEarningsCall) {
    this._call = call;
  }
}
